openapi: 3.0.0
info:
  version: 1.0.0
  title: TTMI Dubai
tags:
  - name: Login
    description: Login with account from global app
  - name: Vehicle
    description: API for get vehicle data
  - name: Parking
    description: API for parking service
  - name: Fuel Delivery
    description: API for Fuel service
  - name: Notification
    description: API for notification
servers:
  - url: 'http://localhost:5000'
paths:
  '/login':
    post:
      tags:
        - Login
      summary: Login
      description: Login to TCJP system with account from global application.
      operationId: login
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  passport:
                    description: passport use for other service 
                    type: string
                    example: passport
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  description: User Name 
                  type: string
                  example: toYOtaUser
                password:
                  description: Password 
                  type: string
                  example: toYOtaPassword
        description: Payload for login API
        required: true

  '/vehicles': 
    get:
      tags:
        - Vehicle
      security:
        - bearerAuth: []
      summary: Get Vehicles
      description: Get all vehicle belong to current user
      operationId: vehicles
      parameters:
        - name: page_size
          in: header
          required: false
          schema:
            type: integer
            description: The maximum number of items to return. If the page_size is 0, the server will decide the number of results to be returned. (default will be returned)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  page_size:
                    type: integer
                    description: The maximum number of items to return. If the page_size is 0, the server will decide the number of results to be returned. (default will be returned)
                    example: 20
                  page_token: 
                    type: string
                  vehicles: 
                    type: array 
                    items: 
                      $ref: '#/components/schemas/Vehicle'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
  '/vehicle/status/{id}': 
    parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
    get:
      tags:
        - Vehicle
      summary: Get Vehicle Status
      description: Get Vehicle Status
      operationId: vehicle/status/id
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleStatus'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

    
  '/vehicle/{id}': 
    parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
    get:
      tags:
        - Vehicle
      summary: Get Vehicle Detail
      description: Get Vehicle Detail detail
      operationId: vehicles/id
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

    patch:
        tags:
          - Vehicle
        summary: Update Vehicle Detail
        description: For update plate number
        operationId: update-vehicle-plate
        security:
          - bearerAuth: []
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  plate_number:
                    description: plate number
                    type: string
                    example: 12356789
          description: Payload for update vehicle plate
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  $ref: '#/components/schemas/Vehicle'
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequestError'

          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequestError'
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequestError'
          '404':
            description: Not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequestError'
          

  '/parkings/zones/nearest': 
    get:
      tags:
        - Parking
      summary: Get Nearest Zone
      description: Get nearest zone from user location
      operationId: nearest-zone
      security:
        - bearerAuth: []
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: string
        - name: longitude
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Zone'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

  '/parkings/zones/order': 
    post:
      tags:
        - Parking
      summary: Create Parking Order
      description: For create parking order
      operationId: create-parking-order
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                smartphone_app_id:
                  description: Smart Phone App ID (linking ID)
                  type: string
                  example: fwwveqxnue9715041254701615097270154e858104ab1ad4b708494e6d5c36f6282yzjepkheluyecdrqqfiqftiokylkvymzr
                phone_number:
                  description: Mobile number preceded by 971 without ‘0’, ‘+’ or ‘00’
                  type: string
                  example: 971504125470
                language_code:
                  description: “0” for English, “8” for Arabic
                  type: string
                  example: 0
                plate_number:
                  description: Plate Number of the vehicle
                  type: string
                  example: 38599
                zone_number:
                  description: Parking Zone Number
                  type: string
                  example: 226C
                duration:
                  description: 30 for ½ hour Virtual Permit. For other durations, the value should be in hours e.g. 1, 2, 3…etc.
                  type: integer
                  example: 1
                rta_portal_id:
                  description: RTA Portal User ID
                  type: string
                  example: TarunToyota
                loyalty_id:
                  description: Loyalty Id of the user account. Otherwise send 0
                  type: integer
                  example: 0
                request_source_id:
                  type: integer
                  example: 8
        description: Payload for create parking order
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ParkingOrder'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

  '/parkings/zones/order/{id}': 
    parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
    get:
      tags:
        - Parking
      summary: Get Parking Order Detail
      description: Parking order detail
      operationId: parking-order-detail
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ParkingOrder'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

    patch:
        tags:
          - Parking
        summary: Update Parking Order
        description: For extend duration
        operationId: update-parking-order
        security:
          - bearerAuth: []
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  duration:
                    description: duration
                    type: string
                    example: 2
          description: Payload for extend duration time
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  $ref: '#/components/schemas/ParkingOrder'
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequestError'

          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequestError'
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequestError'
          '404':
            description: Not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BadRequestError'

  '/parkings/zones/orders': 
    get:
      tags:
        - Parking
      summary: Get Parking Orders
      description: Get Parking Orders
      operationId: parking-orders
      security:
        - bearerAuth: []
      parameters:
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            description: The maximum number of items to return. If the page_size is 0, the server will decide the number of results to be returned. (default will be returned)
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            description: The next_page_token value returned from a previous List request, if any.
        - name: order_by
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: Specify sorting order for list results. The string value follows SQL syntax. comma separated list of fields. The default sorting order is ascending.
        - name: query
          in: query
          required: false
          schema:
            type: string
            description: The keyword you want to use to perform the search
        - name: query_by
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: Specify search fields you want to search by keyword specified in query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  page_size:
                    type: integer
                    description: The maximum number of items to return. If the page_size is 0, the server will decide the number of results to be returned. (default will be returned)
                    example: 20
                  page_token: 
                    type: string
                  vehicles: 
                    type: array 
                    items: 
                      $ref: '#/components/schemas/ParkingOrder'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

  '/fuel_delivery/booking_slot': 
    get:
      tags:
        - Fuel Delivery
      summary: Get Fuel Delivery Slot
      description: Get Fuel Delivery Slot
      operationId: fuel_delivery_slot
      security:
        - bearerAuth: []
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
        - name: coordinates
          in: query
          required: true
          schema:
            type: string
        - name: Accept-Language
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/FuelDeliverySlot'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

  '/fuel_delivery/services': 
    get:
      tags:
        - Fuel Delivery
      summary: Get Fuel Delivery Services
      description: Get Fuel Delivery Service
      operationId: fuel_delivery_service
      security:
        - bearerAuth: []
      parameters:
        - name: coordinates
          in: query
          required: true
          schema:
            type: string
        - name: Accept-Language
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  vehicles: 
                    type: array 
                    items: 
                      $ref: '#/components/schemas/FuelDeliveryService'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

  '/fuel_delivery/order': 
    post:
      tags:
        - Fuel Delivery
      summary: Create Fuel Delivery Order
      description: Create Fuel Delivery Order
      operationId: create-fuel-delivery-order
      security:
        - bearerAuth: []
      parameters:
        - name: Accept-Language
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  description: The service choose from list 
                  type: string
                  example: 1
                address:
                  description: User Address
                  type: object
                coordinates:
                  description: Coordinates
                  type: object
                  properties:
                    coordinates:
                      type: object
                      properties:
                        latitude:
                          type: number
                        longitude:
                          type: number
                time_slot:
                  description: timeslot
                  type: object
                  properties:
                    date: 
                      type: string
                      example: "2023-12-31"
                    start_time: 
                      type: string
                      example: "21:00"
                    end_time:
                      type: string
                      example: "22:00"
                vehicle:
                  description: vehicle
                  type: object
                  properties:
                    model_name:
                      type: string
                    registration_plate:
                      type: object
                      properties:
                        issuer_city: 
                          type: string
                          example: "Dubai"
                        sections:
                          type: array
                          items:
                            type: string
                          example: ["N","87395"]
                user:
                  description: user
                  type: object
                  properties:
                    phone_number:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
        description: Payload for create fuel delivery order
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/FuelDeliveryOrder'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

  '/fuel_delivery/orders': 
    get:
      tags:
        - Fuel Delivery
      summary: Get Fuel delivery orders
      description: Get Fuel delivery orders
      operationId: fuel_delivery-orders
      security:
        - bearerAuth: []
      parameters:
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            description: The maximum number of items to return. If the page_size is 0, the server will decide the number of results to be returned. (default will be returned)
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            description: The next_page_token value returned from a previous List request, if any.
        - name: order_by
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: Specify sorting order for list results. The string value follows SQL syntax. comma separated list of fields. The default sorting order is ascending.
        - name: query
          in: query
          required: false
          schema:
            type: string
            description: The keyword you want to use to perform the search
        - name: query_by
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: Specify search fields you want to search by keyword specified in query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  page_size:
                    type: integer
                    description: The maximum number of items to return. If the page_size is 0, the server will decide the number of results to be returned. (default will be returned)
                    example: 20
                  page_token: 
                    type: string
                  orders: 
                    type: array 
                    items: 
                      $ref: '#/components/schemas/FuelDeliveryOrder'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'


  '/fuel_delivery/order/{id}': 
    get:
      tags:
        - Fuel Delivery
      summary: Get Fuel Order Detail
      description: Fuel order detail
      operationId: fuel-order-detail
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/FuelDeliveryOrder'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'


  '/fuel_delivery/order/{id}/cancel': 
    delete:
      tags:
        - Fuel Delivery
      summary: Cancel Fuel Order
      description: Cancel Fuel Order
      operationId: delete-fuel-order
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'


  '/notifications/token':
    post:
      tags:
        - Notification
      summary: Register notification token
      description: Register notification token
      operationId: register_notification_token
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                notification_token:
                  description: Notification token (from FCM)
                  type: string
                  example: fwwveqxnue9715041254701615097270154e858104ab1ad4b
                user_id:
                  description: Current user id
                  type: number
                  example: 1
        description: Payload for register token
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_success: 
                    type: boolean
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
  '/notifications':
    get:
      tags:
        - Notification
      summary: Get User Notifications
      description: Get User Notifications
      operationId: user-notifications
      security:
        - bearerAuth: []
      parameters:
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            description: The maximum number of items to return. If the page_size is 0, the server will decide the number of results to be returned. (default will be returned)
        - name: page_token
          in: query
          required: false
          schema:
            type: string
            description: The next_page_token value returned from a previous List request, if any.
        - name: order_by
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: Specify sorting order for list results. The string value follows SQL syntax. comma separated list of fields. The default sorting order is ascending.
        - name: query
          in: query
          required: false
          schema:
            type: string
            description: The keyword you want to use to perform the search
        - name: query_by
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            description: Specify search fields you want to search by keyword specified in query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  page_size:
                    type: integer
                    description: The maximum number of items to return. If the page_size is 0, the server will decide the number of results to be returned. (default will be returned)
                    example: 20
                  page_token: 
                    type: string
                  notifications: 
                    type: array 
                    items: 
                      $ref: '#/components/schemas/Notification'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'


  '/notification/{id}':
    parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
    patch:
      tags:
        - Notification
      summary: Mark notification as read
      description: Mark notification as read
      operationId: mark_notification_as_read
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
        description: Payload for register token
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
components:
  schemas:
    Notification:
      type: object
      properties:
        id: 
          type: integer
        title: 
          type: string
        message:
          type: string 
        service: 
          type: string
        redirect_action:
          type: string
        is_read: 
          type: boolean
    BadRequestError:
      type: object
      properties: 
        code: 
          description: Error code
          type: integer
          example: 400
        error: 
          description: Error message
          type: string
          example: Error
    VehicleStatus:
      description: Vehicle status
      type: object
      properties: 
        received_date: 
          type: string
          example: string
        latitude: 
          type: number
        longitude: 
          type: number
        odor_meter: 
          type: number
        total_fuel: 
          type: number
        remaining_fuel: 
          type: number
        driving_range: 
          type: number
    Vehicle:
      description: Vehicle
      type: object
      properties: 
        vin: 
          description: Vin string - unique for each vehicle
          type: string
          example: string
        branch_code: 
          description: Branch Code 1:Toyota 2:Lexus
          type: string
          example: string
        plate_number: 
          description: Plate number 
          type: string
          example: string
        vehicle_model: 
          type: string
          example: string
        color_code: 
          type: string
          example: string
        color_name: 
          type: string
          example: string
        vehicle_name: 
          type: string
          example: string
        user_type: 
          description:  1:Owner 2:Shared user
          type: integer
          example: 1
    Zone: 
      description: Zone
      type: object
      properties: 
        id: 
          type: integer
          example: 1
        id_str: 
          type: string
          description: id from Redis database
          example: 29734
        lat: 
          description: latitude
          type: number
          example: -25.265630517742466
        long: 
          description: longitude
          type: number
          example: -25.265630517742466
        type: 
          description: Type
          type: string
          example: Premium
        provider: 
          description: Provider
          type: string
          example: MAWAQIF
    ParkingOrder:
      description: Parking Order
      type: object
      properties: 
        id: 
          type: number
          description: Virtual Permit ID
        parent_id: 
          type: number
          description: Parent ID of the ticket, if any
        user_phone_number: 
          type: string
          description: Mobile Number of the user
        smartPhone_app_id: 
          type: string
          description: Smart Phone App ID (linking ID)
        plate_number: 
          type: string
          description: Plate Number of the vehicle
        zone_number: 
          type: string
          description: Parking Zone Number
        start_time: 
          type: number
          description: Start Time of the Virtual Permit
        expiry_time: 
          type: number
          description: Expiry Time of the Virtual Permit
        next_paid_parking_time: 
          type: number
          description: Next Paid Parking Time if current time is Free Parking Time
        language_code: 
          type: string
          description: “0” for English - “8” for Arabic
        datetime_created: 
          type: number
          description: Date Time of the VP Created
        error_code: 
          type: integer
          description: Error Code, if any
        error_message: 
          type: string
          description: Error Message, if any
        parking_duration: 
          type: integer
          description: Duration of the Virtual Permit in minutes
        total_duration: 
          type: integer
          description: Total Duration of the Virtual Permit in hours
        max_parking_duration: 
          type: integer
          description: Maximum duration for parking allowed in zone
        amount: 
          type: integer
          description: Amount charged in fills
        is_success: 
          type: boolean
          description: true or false

    FuelDeliverySlot:
      description: Fuel Delivery Slot
      type: object
      properties: 
        start_time: 
          type: string
          example: 08:00
        end_time: 
          type: string
          example: 09:00
    FuelDeliveryService:
      description: Fuel Delivery Service
      type: object
      properties: 
        id: 
          type: integer
          example: 1
        name: 
          type: string
          example: Super 98
        price: 
          type: object
          properties:
            amount:
              type: number
              example: 3.87
            unit:
              type: string
              example: litre
            currency:
              type: string
              example: aed
        service: 
          type: object
          properties:
            code:
              type: string
              example: FD
            slug:
              type: string
              example: fuel
            name:
              type: string
              example: Fuel Delivery
            description:
              type: string
              example: Anytime, anywhere
            subtitle:
              type: string
              example: Same price as the petrol station!

    FuelDeliveryOrder:
      description: Fuel Delivery Order
      type: object
      properties:
        id:
          type: integer
          example: 1
        product_id:
          type: integer
          example: 451
        status:
          type: string
          example: "confirmed"
        coordinates:
          description: Coordinates
          type: object
          properties:
            coordinates:
              type: object
              properties:
                latitude:
                  type: number
                longitude:
                  type: number
        time_slot:
          type: object
          properties:
            date: 
              type: string
              example: 2023-12-31
            start_time: 
              type: string
              example: 21:00
            end_time: 
              type: string
              example: 22:00
        vehicles: 
          type: object
          properties:
            model_name:
              type: string
              example: Camry
            vin:
              type: string
              example: 4T1BE32K85U528911
            year:
              type: integer
              example: 2005
            exterior_color_type:
              type: string
              example: white
            registration_plate:
              type: object
              properties:
                issuer_city:
                  type: string
                  example: dubai
                sections:
                  type: array
                  items:
                    type: string
                  example: ["N","87395"]
        user:
          type: object
          properties:
            mobile:
              type: integer
              example: 971551234567
            first_name:
              type: string
              example: "John"
            last_name:
              type: string
              example: "Dae"
        address: 
          type: object
          properties:
            coordinates:
              type: object
              properties:
                lat: 
                  type: number
                  example: 25.204198539249326
                long: 
                  type: number
                  example: 25.204198539249326
        products:
          type: object
          properties:
            id:   
              type: integer
            name:
              type: string
            service: 
              type: object
              properties:
                code: 
                  type: string
                  example: FD
                slug:
                  type: string
                  example: fuel
                name: 
                  type: string
                  example: Fuel Delivery
                description:
                  type: string
                sub_title:
                  type: string
  securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer

    
    